{"ast":null,"code":"var _jsxFileName = \"/home/sandeep/Documents/Web-Dev/covid_19-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api/index\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const dailyData = await fetchDailyData();\n      setDailyData(dailyData);\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"],\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: \"Current state in \" + country\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/sandeep/Documents/Web-Dev/covid_19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","value","recovered","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3B,YAAMF,SAAS,GAAG,MAAMP,cAAc,EAAtC;AACAQ,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAHD;;AAKAE,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;AASA,QAAMC,SAAS,GAAGH,SAAS,CAAC,CAAD,CAAT,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJI,MAAAA,MAAM,EAAEJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACET,QAAAA,IAAI,EAAEE,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADR;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEb,QAAAA,IAAI,EAAEE,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADR;AAEEH,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEG,QAAAA,eAAe,EAAE,sBAJnB;AAKEF,QAAAA,IAAI,EAAE;AALR,OAPQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAqBd,IArBJ;AAuBA,QAAMG,QAAQ,GACZhB,IAAI,CAACU,SAAL,gBACA,oBAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACJJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJG,MAAAA,QAAQ,EAAE,CAAC;AACTE,QAAAA,KAAK,EAAE,QADE;AAETI,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAFR;AAGTf,QAAAA,IAAI,EAAE,CAACA,IAAI,CAACU,SAAL,CAAeO,KAAhB,EAAuBjB,IAAI,CAACkB,SAAL,CAAeD,KAAtC,EAA6CjB,IAAI,CAACc,MAAL,CAAYG,KAAzD;AAHG,OAAD;AAFN,KADN;AASA,IAAA,OAAO,EAAE;AACPE,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADD;AAEPC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAE,sBAAsBrB;AAA5C;AAFA,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAcM,IAfR;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCtB,OAAO,GAAGe,QAAH,GAAcX,SAAxD,CADJ;AAGD,CAxDD;;AA0DA,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api/index\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({data, country}) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const dailyData = await fetchDailyData();\n      setDailyData(dailyData);\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = (\n    data.confirmed ? (\n    <Bar\n    data={{\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"],\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n      }]\n    }}\n    options={{\n      legend: {display: false},\n      title: {display: true, text: \"Current state in \" + country}\n    }}\n    />) : null\n  );\n\n  return (\n      <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}