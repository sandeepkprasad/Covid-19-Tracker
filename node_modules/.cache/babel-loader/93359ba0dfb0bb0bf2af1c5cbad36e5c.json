{"ast":null,"code":"var _jsxFileName = \"/home/sandeep/Documents/Web-Dev/covid_19-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { fetchDailyData } from \"../../api/index\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const dailyData = await fetchDailyData();\n      setDailyData(dailyData);\n    };\n\n    fetchAPI();\n  }, []);\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"],\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: \"Current state in \" + country\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/sandeep/Documents/Web-Dev/covid_19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","barChart","confirmed","labels","datasets","label","backgroundColor","value","recovered","deaths","legend","display","title","text","lineChart","map","date","borderColor","fill","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3B,YAAMF,SAAS,GAAG,MAAML,cAAc,EAAtC;AACAM,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAHD;;AAKAE,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;AASA,QAAMC,QAAQ,GAAIL,IAAI,CAACM,SAAL,gBAChB,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEC,QAAAA,eAAe,EAAE,CACf,sBADe,EAEf,sBAFe,EAGf,sBAHe,CAFnB;AAOEV,QAAAA,IAAI,EAAE,CACJA,IAAI,CAACM,SAAL,CAAeK,KADX,EAEJX,IAAI,CAACY,SAAL,CAAeD,KAFX,EAGJX,IAAI,CAACa,MAAL,CAAYF,KAHR;AAPR,OADQ;AAFN,KADR;AAmBE,IAAA,OAAO,EAAE;AACPG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAE,sBAAsBhB;AAA7C;AAFA,KAnBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAyBd,IAzBJ;AA4BA,QAAMiB,SAAS,GAAIhB,SAAS,CAAC,CAAD,CAAT,gBACjB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJK,MAAAA,MAAM,EAAEL,SAAS,CAACiB,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJZ,MAAAA,QAAQ,EAAE,CACR;AACER,QAAAA,IAAI,EAAEE,SAAS,CAACiB,GAAV,CAAc,CAAC;AAAEb,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADR;AAEEG,QAAAA,KAAK,EAAE,UAFT;AAGEY,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEtB,QAAAA,IAAI,EAAEE,SAAS,CAACiB,GAAV,CAAc,CAAC;AAAEN,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADR;AAEEJ,QAAAA,KAAK,EAAE,QAFT;AAGEY,QAAAA,WAAW,EAAE,KAHf;AAIEX,QAAAA,eAAe,EAAE,sBAJnB;AAKEY,QAAAA,IAAI,EAAE;AALR,OAPQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GAqBf,IArBJ;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCtB,OAAO,GAAGI,QAAH,GAAca,SAAxD,CADF;AAGD,CAnED;;AAqEA,eAAenB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { fetchDailyData } from \"../../api/index\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const dailyData = await fetchDailyData();\n      setDailyData(dailyData);\n    };\n\n    fetchAPI();\n  }, []);\n\n  const barChart = (data.confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [\n              data.confirmed.value,\n              data.recovered.value,\n              data.deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: \"Current state in \" + country },\n      }}\n    />\n  ) : null\n  );\n\n  const lineChart = (dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null\n  );\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}